name: 'AWS Autoscaler'
description: 'Scale up an EC2 instance for GitHub Runners'
inputs:
  awsRegion:
    description: "GitHub Runner's AWS Region"
    required: true
  roleToAssume:
    description: "GitHub Runner's autoscaling group IAM role"
    required: true
  groupName:  
    description: 'autoscaling group name'
    required: true
  timeoutMinutes:  
    description: 'timeout in minutes'
    required: false
    default: "2"
  waitBetweenChecks:  
    description: 'Sleep time between checks in seconds'
    required: false
    default: "10"    
  extraWait:  
    description: 'Sleep for extra time when runner just scaled up in seconds'
    required: false
    default: "60"
runs:
  using: "composite"
  steps: 
    - name: 'Configure AWS Credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ inputs.awsRegion }}
        role-to-assume: ${{ inputs.roleToAssume }}
        role-skip-session-tagging: true
        # 900s/15min is minimum duration
        role-duration-seconds: 900

    - shell: bash
      env:
        GROUP_NAME: ${{ inputs.groupName }}
        TIMEOUT_MINUTES: ${{ inputs.timeoutMinutes }}
        WAIT_BETWEEN_CHECKS: ${{ inputs.waitBetweenChecks }}
        EXTRA_WAIT: ${{ inputs.extraWait }}
      run: |
        echo "Scaled up the autoscaling group ($GROUP_NAME) to 1"
        aws autoscaling set-desired-capacity --auto-scaling-group-name $GROUP_NAME --desired-capacity 1

        secs=$TIMEOUT_MINUTES*60;
        SECONDS=0
        while (( SECONDS < secs )); do
          response=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names $GROUP_NAME --query 'AutoScalingGroups[0].Instances[0].LifecycleState' --output text);

          if [[ "$response" == "InService" ]]; then
            echo "Runner is in service."
            break;
          elif [[ "$response" == "Pending" ]]; then
            export extraWait=true;
          fi

          echo "Not in service yet! Wait for $WAIT_BETWEEN_CHECKS seconds.";
          sleep $WAIT_BETWEEN_CHECKS;
        done;

        if [[ $extraWait ]]; then
          echo "Wait for $EXTRA_WAIT seconds more as this runner just scaled up.";
          sleep $EXTRA_WAIT;
        fi
